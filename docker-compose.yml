version: '3.4'

services:

  movie-db:
    image: mysql:8.0.26
    container_name: movie-db
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'secret'
      MYSQL_DATABASE: 'movie_trash'
      MYSQL_USER: 'movie_user'
      MYSQL_PASSWORD: 'movie_pass'
    ports:
      - '3306:3306'
    volumes:
      - movie-db:/var/lib/mysql

  movie-service:
    build:
      context: .\
      dockerfile: Dockerfile
    image: 'movie-service:latest'
    container_name: movie-service
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      - 'SPRING_PROFILES_ACTIVE=docker'
    depends_on:
      - movie-db

  movie-sender:
    build:
      context: .\
      dockerfile: Dockerfile-sender
    image: 'movie-sender:latest'
    container_name: movie-sender
    restart: unless-stopped
    ports:
      - '9090:9090'
    environment:
      - 'SPRING_PROFILES_ACTIVE=docker_sender'
    depends_on:
      - mongo-db

  movie-frontend:
    build:
      context: .\
      dockerfile: Dockerfile-frontend
    image: 'movie-frontend:latest'
    container_name: movie-frontend
    restart: unless-stopped
    ports:
      - '8585:8585'
    environment:
      - 'SPRING_PROFILES_ACTIVE=docker'

  movie-rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'movie-rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ./rabbitmq/data/:/var/lib/movie-rabbitmq
      - ./rabbitmq/log/:/var/log/movie-rabbitmq
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
      image: confluentinc/cp-kafka:latest
      depends_on:
        - zookeeper
      ports:
        - 29092:29092
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://cinema-base-gradle_kafka_1:29092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo-db:
      image: mongo
      container_name: mongo-db
      ports:
        - 27017:27017
      environment:
        - MONGO_INITDB_ROOT_USERNAME=user
        - MONGO_INITDB_ROOT_PASSWORD=pass

volumes:
  movie-db: { }
  mongo-db: { }
  movie-rabbitmq: { }

