plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
    id 'checkstyle'
    id 'com.github.spotbugs' version '4.7.9'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "org.sonarqube"
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.spotbugs'


    ext {
        lombokVersion = '1.18.20'
        findbugsVersion = '3.0.1'
    }

    dependencies {
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        implementation "org.projectlombok:lombok:${lombokVersion}"
        //spotbugs
        implementation "com.google.code.findbugs:annotations:${findbugsVersion}"
    }

    test {
        useJUnitPlatform()
    }
}

//jacoco
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}
    jacocoTestReport {
        group = "Reporting"
        sourceSets sourceSets.main
        executionData test
        reports {
            xml.enabled true
            csv.enabled false
            html.enabled true
            xml.destination file("${buildDir}/jacoco/coverage.xml")
            html.destination file("${buildDir}/jacoco/coverage")
        }
    }

//sonarqube
sonarqube {
    properties {
        property "sonar.projectKey", "Sergey113222_Cinema-Base-Gradle"
        property "sonar.organization", "sergey113222"
        property "sonar.host.url", "https://sonarcloud.io"
        property('sonar.login', '39d359d3fa437a78c6ec88a86e8b5e76b9aba2aa')
        property('sonar.jacoco.xmlReportPaths', jacocoTestReport.reports.xml.outputLocation)
        property 'sonar.exclusions', "**/dto/**," +
                "**/model/**," +
                "**/exception/**," +
                "**/config/**"
    }
}

spotbugs
spotbugsMain {
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
            stylesheet = 'fancy-hist.xsl'
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'rest/src/main/java/com/example/cinemabasegradle/CinemaBaseGradleApplication'
    }
}
